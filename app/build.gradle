plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "net.mootoh.rustica2"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "foursquare_client_id", getProps("foursquare_client_id")
        buildConfigField "String", "foursquare_client_secret", getProps("foursquare_client_secret")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'res/drawable/notification_bg.xml'
        exclude 'res/drawable/notification_bg_low.xml'
        exclude 'res/layout/notification_template_part_time.xml'
        exclude 'res/layout/notification_template_part_chronometer.xml'
        exclude 'resources.arsc'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.foursquare:foursquare-android-oauth:1.1.1'

    testImplementation 'junit:junit:4.13.1'
}

// thanks to http://stackoverflow.com/questions/25854849/use-a-local-properties-field-when-declaring-a-buildconfigfield
def getProps(String propName) {
  def propsFile = rootProject.file('local.properties')
  if (propsFile.exists()) {
    def props = new Properties()
    props.load(new FileInputStream(propsFile))
    return props[propName]
  } else {
    return "";
  }
}
